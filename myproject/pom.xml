<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-backend-sd-bootstrap:pom.p.vm.xml
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.company.demo</groupId>
	<artifactId>myproject</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>myproject</name>
	<properties>
		<!-- ~~~~~~~~ -->
		<!-- Database -->
		<!-- ~~~~~~~~ -->
		<!-- Note: during development using the same value for your login, password, database name and project name is really convenient -->
		<database.name>${project.name}</database.name>
		<database.host>localhost</database.host>
		<database.user>${project.name}</database.user>
		<database.password>${project.name}</database.password>
		<!-- Default values when no database profile is set -->
		<!-- jdbc driver dependency -->
		<jdbc.groupId>com.h2database</jdbc.groupId>
		<jdbc.artifactId>h2</jdbc.artifactId>
		<jdbc.version>1.2.131</jdbc.version>
		<!-- jdbc settings -->
		<jdbc.type>h2</jdbc.type>
		<jdbc.driver>org.h2.Driver</jdbc.driver>
		<jdbc.url>jdbc:h2:~/.h2/myproject-1.0.0</jdbc.url>
		<jdbc.user>myproject-1.0.0</jdbc.user>
		<jdbc.password>myproject-1.0.0</jdbc.password>
		<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
		<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
		<!-- ~~~~~~ -->
		<!-- System -->
		<!-- ~~~~~~ -->
		<jdk.version>1.6</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Version dependencies when used in multiple dependencies -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<hibernate.version>3.6.9.Final</hibernate.version>
		<spring.version>3.0.7.RELEASE</spring.version>
		<spring-security.version>3.0.7.RELEASE</spring-security.version>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Variables substituted in resources file at build time -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Log level, see by src/main/resource/log4j.properties -->
		<log4j.level>DEBUG</log4j.level>
		<!-- hibernate, see by src/main/resource/hibernate.properties -->
		<hibernate.show.sql>true</hibernate.show.sql>
		<hibernate.format.sql>true</hibernate.format.sql>
		<hibernate.generate_statistics>true</hibernate.generate_statistics>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>
	</properties>
	<developers>
		<developer>
			<name>SpringFuse</name>
			<email>info@springfuse.com</email>
			<organization>Springfuse</organization>
			<organizationUrl>http://www.springfuse.com</organizationUrl>
		</developer>
	</developers>
	<profiles>
		<profile>
			<id>postgresql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>8.2-504.jdbc3</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>postgresql</jdbc.type>
				<jdbc.driver>org.postgresql.Driver</jdbc.driver>
				<jdbc.url>jdbc:postgresql://${database.host}/${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<!-- jdbc driver dependency -->
				<!-- Please deploy this driver in your local maven repository -->
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc14</jdbc.artifactId>
				<jdbc.version>10.2.0.3</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>oracle</jdbc.type>
				<jdbc.driver>oracle.jdbc.driver.OracleDriver</jdbc.driver>
				<jdbc.url>jdbc:oracle:thin:@${database.host}:1521:XE</jdbc.url>
				<jdbc.catalog>${database.name}</jdbc.catalog>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</hibernate.dialect>
				<!-- misc -->
				<sql-maven-plugin.delimiter>/</sql-maven-plugin.delimiter>
			</properties>
		</profile>
		<profile>
			<id>db2</id>
			<properties>
				<!-- jdbc driver dependency -->
				<!-- Please deploy this driver in your local maven repository -->
				<jdbc.groupId>com.ibm.db2</jdbc.groupId>
				<jdbc.artifactId>db2jcc4</jdbc.artifactId>
				<jdbc.version>9.7.0.4</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>db2</jdbc.type>
				<jdbc.driver>com.ibm.db2.jcc.DB2Driver</jdbc.driver>
				<jdbc.url>jdbc:db2://${database.host}:50000/${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.DB2Dialect</hibernate.dialect>
				<!-- misc -->
				<sql-maven-plugin.delimiter>;</sql-maven-plugin.delimiter>
			</properties>
			<dependencies>
				<!-- db2 License dependency -->
				<dependency>
					<groupId>com.ibm.db2</groupId>
					<artifactId>db2jcc_license_cu</artifactId>
					<version>9.7.0.4</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>mysql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
				<jdbc.version>5.1.17</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>mysql</jdbc.type>
				<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
				<!-- see http://dev.mysql.com/doc/refman/5.0/en/connector-j-reference-configuration-properties.html -->
				<jdbc.url>jdbc:mysql://${database.host}/${database.name}?zeroDateTimeBehavior=convertToNull</jdbc.url>
				<jdbc.catalog>${database.name}</jdbc.catalog>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>hsql</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>hsqldb</jdbc.groupId>
				<jdbc.artifactId>hsqldb</jdbc.artifactId>
				<jdbc.version>1.8.0.7</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>hsqldb</jdbc.type>
				<jdbc.driver>org.hsqldb.jdbcDriver</jdbc.driver>
				<jdbc.url>jdbc:hsqldb:file:${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>h2</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>com.h2database</jdbc.groupId>
				<jdbc.artifactId>h2</jdbc.artifactId>
				<jdbc.version>1.3.164</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>h2</jdbc.type>
				<jdbc.driver>org.h2.Driver</jdbc.driver>
				<jdbc.url>jdbc:h2:~/.h2/${database.name}</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
			</properties>
		</profile>
		<profile>
			<id>derby</id>
			<properties>
				<!-- jdbc driver dependency -->
				<jdbc.groupId>org.apache.derby</jdbc.groupId>
				<jdbc.artifactId>derby</jdbc.artifactId>
				<jdbc.version>10.4.1.3</jdbc.version>
				<!-- jdbc settings -->
				<jdbc.type>postgresql</jdbc.type>
				<jdbc.driver>org.apache.derby.jdbc.EmbeddedDriver</jdbc.driver>
				<jdbc.url>jdbc:derby:${database.name};create=true</jdbc.url>
				<jdbc.user>${database.user}</jdbc.user>
				<jdbc.password>${database.password}</jdbc.password>
				<!-- hibernate -->
				<hibernate.dialect>org.hibernate.dialect.DerbyDialect</hibernate.dialect>
				<!-- misc -->
				<sql-maven-plugin.delimiter>/</sql-maven-plugin.delimiter>
			</properties>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<!-- Disable debug modes -->
			<!-- ~~~~~~~~~~~~~~~~~~~ -->
			<id>perf</id>
			<properties>
				<hibernate.show.sql>false</hibernate.show.sql>
				<hibernate.format.sql>false</hibernate.format.sql>
				<hibernate.use_sql_comments>false</hibernate.use_sql_comments>
				<hibernate.generate_statistics>false</hibernate.generate_statistics>
				<log4j.level>WARN</log4j.level>
			</properties>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Drop and recreate the database -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>db</id>
			<build>
				<defaultGoal>initialize</defaultGoal>
				<plugins>
					<plugin>
						<!-- http://mojo.codehaus.org/sql-maven-plugin/ -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<configuration>
							<driver>${jdbc.driver}</driver>
							<url>${jdbc.url}</url>
							<username>${jdbc.user}</username>
							<password>${jdbc.password}</password>
							<autocommit>true</autocommit>
							<encoding>UTF-8</encoding>
							<print>true</print>
							<printResultSet>true</printResultSet>
							<onError>continue</onError>
							<delimiter>${sql-maven-plugin.delimiter}</delimiter>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/main/sql/${jdbc.type}/*.sql</include>
								</includes>
							</fileset>
						</configuration>
						<executions>
							<execution>
								<id>Create and initialize the database</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Extract the database metadata -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>metadata</id>
			<build>
				<defaultGoal>generate-sources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.springfuse</groupId>
						<artifactId>maven-springfuse-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Extract metadata</id>
								<goals>
									<goal>extract-metadata</goal>
								</goals>
								<configuration>
									<targetFilename>${basedir}/src/main/config/maven-celerio-plugin/metadata.xml</targetFilename>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<!-- Generate the code using Celerio -->
			<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
			<id>gen</id>
			<build>
				<defaultGoal>generate-sources</defaultGoal>
				<plugins>
					<plugin>
						<groupId>com.springfuse</groupId>
						<artifactId>maven-springfuse-plugin</artifactId>
						<version>${maven-celerio-plugin.version}</version>
						<executions>
							<execution>
								<id>Produce application using http://www.springfuse.com.</id>
								<goals>
									<goal>remote-generation</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>${jdbc.groupId}</groupId>
								<artifactId>${jdbc.artifactId}</artifactId>
								<version>${jdbc.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<pluginRepositories>
				<pluginRepository>
					<id>springfuse-repository</id>
					<url>http://maven2.springfuse.com</url>
				</pluginRepository>
			</pluginRepositories>
		</profile>
	</profiles>
	<reporting>
		<plugins>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-surefire-report-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<showSuccess>false</showSuccess>
					<!-- surefire uses a new jvm, MAVEN_OPTS are ignored, so you better set the memory options here -->
					<argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-javadoc-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-jxr-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/taglist-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-pmd-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<linkXref>true</linkXref>
					<targetJdk>${jdk.version}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-changes-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<xmlPath>src/site/changes.xml</xmlPath>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/cobertura-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/l10n-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>l10n-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<configuration>
					<locales>
						<locale>en</locale>
						<locale>fr</locale>
					</locales>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://mojo.codehaus.org/findbugs-maven-plugin/ -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.4.0</version>
				<configuration>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<!-- ~~~~~~~~~~~~ -->
	<!-- DEPENDENCIES -->
	<!-- ~~~~~~~~~~~~ -->
	<dependencies>
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- List your specific dependencies below -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<!-- Dependencies needed by the generated project -->
		<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-hibernate</artifactId>
			<version>1.3</version>
		</dependency>
		<!-- ~~~~~~~~~~~ -->
		<!-- PERSISTENCE -->
		<!-- ~~~~~~~~~~~ -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<!-- jdbc driver depends on the database profile used -->
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<!-- ~~~~~~~~~~ -->
		<!-- VALIDATION -->
		<!-- ~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
		</dependency>
		<!-- ~~~~~~ -->
		<!-- LOGGER -->
		<!-- ~~~~~~ -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- ~~~~~ -->
		<!-- UTILS -->
		<!-- ~~~~~ -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>11.0.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.1</version>
		</dependency>
		<!-- ~~~~~~ -->
		<!-- SPRING -->
		<!-- ~~~~~~ -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.0.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.12</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.12</version>
		</dependency>
		<!-- ~~~~~~~~~~~~~~~ -->
		<!-- SPRING SECURITY -->
		<!-- ~~~~~~~~~~~~~~~ -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<!-- ~~~~~~~~~~ -->
		<!-- SPRING MVC -->
		<!-- ~~~~~~~~~~ -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- ~~~~ -->
		<!-- TEST -->
		<!-- ~~~~ -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<!-- ~~~~~~~~~~~~ -->
	<!-- REPOSITORIES -->
	<!-- ~~~~~~~~~~~~ -->
	<pluginRepositories>
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>https://nexus.codehaus.org/content/repositories/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>repository.jboss.org</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!-- ~~~~~ -->
	<!-- BUILD -->
	<!-- ~~~~~ -->
	<build>
		<defaultGoal>test</defaultGoal>
		<!-- the processing of ressources is done in two steps -->
		<resources>
			<!-- step 1: copy all properties, and replace all ${something} with their corresponding values defined in the properties -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>log4j.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<!-- step 2: copy ressources all non properties as-is -->
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.properties</exclude>
					<exclude>log4j.xml</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-enforcer-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>2.2.0</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>1.6.0</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-idea-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<jdkLevel>${jdk.version}</jdkLevel>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-eclipse-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-war-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-install-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-clean-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-surefire-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<!-- surefire uses a new jvm, MAVEN_OPTS are ignored, so you better set the memory options here -->
					<argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<!-- http://maven.apache.org/plugins/maven-site-plugin/ -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.0.1</version>
			</plugin>
		</plugins>
	</build>
</project>
